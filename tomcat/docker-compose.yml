# docker-compose --version
# docker-compose up
# docker-compose up -d
# docker-compose down
# docker-compose restart
# docker-compose ps
#
# docker-compose -f SonarQube-Docker-Compose.yml up
# docker-compose -f SonarQube-Docker-Compose.yml up -d

# command: sleep infinity => Docker konteynerların sürekli çalışmasını sağlamak için kullanılan linux komutudur.
# Bu komut konteynarların arka planda sürekli çalışmasını sağlar ve belirli bir görev veya işlem yapılmadığı durumlarda kapanmasını engeller

# restart: on-failure => Docker Container çökmesi halinde otomatik başlat
# restart: no=> Default Yani docker container otomatik olarak restart yapsın
# restart: unless-stopped: Container durduğında otomatik başlasın
# restart: always: Docker Container  her zaman otomatik başlasın

version: '3.8'

# Services
services:

  # JDK Services
  java_jdk_services:
    #image: openjdk:latest
    image: openjdk:latest
    container_name: java_jdk17
    command: sleep infinity
    volumes:
      - jdk_volume:/usr/src/myapp
    working_dir: /usr/src/myapp
    networks:
      - tomcat_network

  # APACHE TOMCAT Services
  apache_tomcat_web:
    image: my_tomcat3
    restart: on-failure
    #build: .
    build:
      context: .
      dockerfile: Tomcat-Dockerfile
    ports:
      - "2222:8080"

# Volume
volumes:
  postgres_data:
    driver: local
  jdk_volume:
    driver: local

# Network
networks:
  tomcat_network:
    name: tomcat_network
    driver: bridge


#  docker images
#  docker ps
#  docker ps -a
#  docker container exec -it <CONTAINER_ID> bash
#  winpty docker container exec -it <CONTAINER_ID> bash

#  winpty docker container exec -it sonarqube_postgres bash
#  \q => Çıkış
#  \l => Veritabanı Listelesin
#  \c sonarqube => Veritabana bağlan
#  \dt: Tabloları Listele
#  \d tabloAdi => Tablo özelliklerini göster

# docker volume ls
# docker volume inspect volumeID
# docker volume rm  volumeID

